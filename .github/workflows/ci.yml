name: Rust CI

permissions:
  contents: read

on:
  push:

  pull_request:

jobs:
  build_core:
    name: Build Core
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        rust:
          - stable
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Rust Version
        run: rustc --version
      - name: Run cargo build (--all-features)
        run: cargo build --all-features --release
        working-directory: ./folwup_core
      - name: Run cargo build (--features alloc)
        run: cargo build --no-default-features --release --features alloc
        working-directory: ./folwup_core
      - name: Run cargo build (--features std)
        run: cargo build --no-default-features --release --features std
        working-directory: ./folwup_core
  test_core:
    name: Test Core
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        rust:
          - stable
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Rust Version
        run: rustc --version
      - name: Run cargo check (--all-features)
        run: cargo check --all-features
        working-directory: ./folwup_core
      - name: Run cargo test (default)
        run: cargo test
        working-directory: ./folwup_core
      - name: Run cargo test (--all-features)
        run: cargo test --all-features
        working-directory: ./folwup_core
      - name: Run cargo test (--features alloc)
        run: cargo test --no-default-features --features alloc
        working-directory: ./folwup_core
      - name: Run cargo test (--features std)
        run: cargo test --no-default-features --features std
        working-directory: ./folwup_core
  build_cli:
    name: Build CLI
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        rust:
          - stable
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Rust Version
        run: rustc --version
      - name: Run cargo build (default)
        run: cargo build
        working-directory: ./folwup_cli
      - name: Run cargo build (--all-features)
        run: cargo build --all-features --release
        working-directory: ./folwup_cli
  test_cli:
    name: Test CLI
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        rust:
          - stable
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Rust Version
        run: rustc --version
      - name: Run cargo check (--all-features)
        run: cargo check --all-features
        working-directory: ./folwup_cli
      - name: Run cargo test (default)
        run: cargo test
        working-directory: ./folwup_cli
      - name: Run cargo test (--all-features)
        run: cargo test --all-features
        working-directory: ./folwup_cli
  rustfmt:
    name: Format
    strategy:
      matrix:
        os:
          - ubuntu-latest
        rust:
          - stable
          - nightly
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt
      - name: Rust Version
        run: rustc --version
      - run: cargo fmt --all -- --check
  clippy:
    name: Clippy
    strategy:
      matrix:
        os:
          - ubuntu-latest
        rust:
          - stable
          - nightly
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy
      - name: Run cargo clippy
        run: cargo clippy --all-targets --all-features